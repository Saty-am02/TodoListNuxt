import{_ as c,t as d,v as l,x as t,y as k,L as u,M as T,N as h,O as f,P as v,Q as p,R as w}from"./entry.d47cc244.js";const D={props:["task"],methods:{toggleDone(){this.$store.commit("TOGGLE_TASK",this.task)},removeTask(){this.$store.commit("REMOVE_TASK",this.task)}}},g={class:"content"},x={class:"buttons"};function y(i,s,o,_,r,e){return d(),l("div",{class:u(`task ${o.task.done?"is-complete":""}`)},[t("div",g,k(o.task.content),1),t("div",x,[t("button",{onClick:s[0]||(s[0]=(...n)=>e.toggleDone&&e.toggleDone(...n))},k(o.task.done?"Undo":"Done"),1),t("button",{onClick:s[1]||(s[1]=(...n)=>e.removeTask&&e.removeTask(...n)),class:"delete"},"Delete")])],2)}const A=c(D,[["render",y]]),B={data(){return{newTask:""}},methods:{addTask(){this.newTask&&(this.$store.commit("ADD_TASK",this.newTask),this.newTask="")}}},C=t("h1",null,"Task Board",-1),K=t("p",null,"Create a list of tasks",-1),b={class:"create-new"},E={class:"tasks"};function S(i,s,o,_,r,e){const n=A;return d(),l("main",null,[C,K,t("div",b,[T(t("input",{type:"text","onUpdate:modelValue":s[0]||(s[0]=a=>r.newTask=a),placeholder:"Add a new task",onKeypress:s[1]||(s[1]=f((...a)=>e.addTask&&e.addTask(...a),["enter"]))},null,544),[[h,r.newTask]]),t("button",{onClick:s[2]||(s[2]=(...a)=>e.addTask&&e.addTask(...a))},"Add")]),t("div",E,[(d(!0),l(v,null,p(i.$store.state.tasks,(a,m)=>(d(),w(n,{key:m,task:a},null,8,["task"]))),128))])])}const L=c(B,[["render",S]]);export{L as default};
